# thresholds.yaml
# Static thresholds + service-specific overrides + SLO targets

# Global static thresholds (fallbacks)
static:
  cpu_usage:            { warning: 70,  critical: 85 }
  memory_usage:         { warning: 75,  critical: 90 }
  latency_ms:           { warning: 200, critical: 500 }
  disk_usage:           { warning: 80,  critical: 90 }
  io_wait:              { warning: 10,  critical: 20 }
  error_rate:           { warning: 0.01, critical: 0.05 }
  temperature_celsius:  { warning: 70,  critical: 85 }
  power_consumption_watts: { warning: 300, critical: 400 }
  active_connections:   { warning: 100, critical: 200 }
  network_in_kbps:      { warning: 80000, critical: 120000 }
  network_out_kbps:     { warning: 80000, critical: 120000 }

# Optional service-specific overrides
overrides:
  payments:
    latency_ms:   { warning: 150, critical: 350 }
    error_rate:   { warning: 0.008, critical: 0.02 }
  api_gateway:
    latency_ms:   { warning: 180, critical: 400 }

# SLO targets (these express desired objectives; provider will derive thresholds from them)
slos:
  latency_ms:
    objective_ms_p95: 200     # target: p95 < 200ms
    warn_factor: 1.1          # warning at 110% of objective
    crit_factor: 1.25         # critical at 125% of objective
  error_rate:
    objective: 0.01           # 1%
    warn_factor: 1.0          # warning at objective breach
    crit_factor: 2.5          # critical at 2.5x objective

# Hysteresis / debounce configuration
hysteresis:
  consecutive_points: 2   # require N consecutive points breaching before alerting
  lookback_points: 5      # search across last M points (including current)
